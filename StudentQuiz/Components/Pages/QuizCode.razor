<!-- 
    This Razor component represents a simple quiz code entry page.
    Students enter a quiz attendance code, which is then validated and
    used to navigate to the quiz display page. It retrieves the logged-in
    user's session data to potentially associate the submission with a user.
    Olivia Anderson 
-->
@page "/quiz"
@inject IHttpContextAccessor HttpContextAccessor
@inject Components.Service.UserState UserState
@inject NavigationManager NavigationManager

<!-- Set page title -->
<PageTitle>Quiz Code</PageTitle>

<h3>Quiz</h3>
<h3>Required Quiz Code</h3>

<!-- Quiz code entry form -->
<EditForm Model="QuizModel" OnValidSubmit="HandleRegistration" FormName="QuizRegistration">
    <DataAnnotationsValidator />
    <!-- Input field for quiz code -->
    <div>
        <label for="quizcode">Enter the attendance quiz code:</label>
        <InputText id="quizcode" class="form-control" style="max-width: 200px;" @bind-Value="QuizModel.QuizCode" />
    </div>

    <!-- Submit button -->
    <button type="submit">Register</button>
</EditForm>

@code {
    // Binds form input
    [SupplyParameterFromForm]
    protected QuizCodeLocal QuizModel { get; set; } = new();
    private string? Username;

    protected override void OnInitialized()
    {
        // Retrieve session values
        Username = HttpContextAccessor.HttpContext?.Session.GetString("Username");
        Console.WriteLine($"Quiz retrieved from session: Username = {Username}");
    }

    // Handles form submission when the user enters a quiz code
    private async Task HandleRegistration()
    {
        // This is where you'd handle DB insertion or API call
        Console.WriteLine($"Quiz HandleQuizRegistration code entered: {QuizModel.QuizCode}");
        if (string.IsNullOrWhiteSpace(QuizModel.QuizCode))
        {
            Console.WriteLine("Quiz code is required.");
            return;
        }

        // Logic to validate the QuizCode if needed (e.g., match a predefined code)
        
        Console.WriteLine("Validating Quiz Code...");
        // Navigate to home page
        await InvokeAsync(() => NavigationManager.NavigateTo("/quizdisplay/" + QuizModel.QuizCode));
    }

    // Local class to hold quiz code input
    public class QuizCodeLocal
    {
        public string? QuizCode { get; set; }
    }
}
